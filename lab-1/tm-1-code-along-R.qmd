---
title: "Text mining basics"
subtitle: "TM Module 1: Code-Along"
format:
  revealjs: 
    slide-number: c/t
    progress: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: img/LASERLogoB.png
    #theme: Cosmo
    theme: [default, css/laser.scss]
    width: 1920
    height: 1080
    margin: 0.05
    footer: <a href=https://www.go.ncsu.edu/laser-institute>go.ncsu.edu/laser-institute
highlight-style: a11y
resources:
  - demo.pdf
bibliography: lit/references.bib
editor: visual
---

## Data Intensive Research-Workflow

![From Learning Analytics Goes to School [@krumm2018]](img/workflow.png){width="300"}

::: notes
**Speaker Notes:**
:::

# Prepare

Guiding Research & Packages

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}

pacman::p_load(pacman, knitr, tidyverse, tidytext, readxl, tidygraph, ggraph)

opd_survey <- read_csv("data/opd_survey.csv")

```

## Guiding Study

::: panel-tabset
## Context
We learn a little bit about the North Carolina Race to the Top grant and the evaluation of the online professional development work, including questions and findings from the 2012 report.

## Questions

The central question guiding this investigation was:

> What aspects of online professional development offerings do teachers find most valuable?

## Data

-   Survey responses

## Findings

-   A common theme from focus groups and open-ended survey responses was the convenience of online professional development. 

-   Educators also frequently cited that the information and resources provided through the modules improved their understanding of the new standards and the teacher evaluation process. 

-   Webinar participants appreciated the useful, updated information presented through a combination of PowerPoint slides and video clips.
:::

::: notes
**Speaker Notes:**
:::

## Load Packages

::: panel-tabset
## R Libraries

Let's start by creating a new R script and loading the {tidyverse} and {tidytext} package which we'll use to import our network data files:

```{r}
library(knitr)
library(tidyverse)
```

```{r load-libraries, echo=TRUE, message=FALSE}
library(tidyverse)

# You may have to install this package if it is not listed in your packages pane.
# install.packages(tidyverse) 
```

**Note**: Tidyverse is actually a [collection of R packages](https://www.tidyverse.org/packages) that share an underlying design philosophy, grammar, and data structures commonly referred to as "tidy data principles." LASER uses the {tidyverse} extensively.

## Text Mining Packages

![](img/tidytext.png){width="398"}\

:::

## Your Turn

Load the {tidytext} package.

```{r, echo=TRUE}
# YOUR CODE HERE
#
```

# Wrangle

Get to know your data

## Import Data

::: panel-tabset
### Read Data

Let's start by importing the .csv file that contain data about survey responses:

```{r, echo=TRUE}
opd_survey <- read_csv("data/opd_survey.csv")
```

### Inspect Data

Now look at just the first six or the last six entries:

```{r inspect-data, echo=TRUE, eval=FALSE}
head(opd_survey)
tail(opd_survey) 
```

### Discuss

Think about the questions below and be prepared to share your response:

1.  What do you think the rows and columns in each file represent?

2.  What about the values in each cell represent?

3.  What else do you notice about the data?

4.  What questions do you have?
:::

## Tidy text

::: panel-tabset
### unnest_tokens()
```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
colnames(opd_survey)[6] ="Resource"

opd_teacher <- opd_survey %>%
  select(Role, Resource, Q21) %>%
  rename(text = Q21) %>%
  slice(-1, -2) %>%
  na.omit() %>%
  filter(Role == "Teacher")

```

Run the following code in your R script:

```{r wrangle-data}
#| echo: true
#| warning: false
#| message: false
opd_tidy <- unnest_tokens(opd_teacher, word, text)

```

In order to tidy our text, we need to break the text into individual tokens (a process called tokenization) and transform it to a tidy data structure. To do this, we use tidytext's incredibly powerful unnest_tokens() function.

### stop_words

Run the following code in your R script:

```{r, echo=TRUE}
opd_clean <- anti_join(opd_tidy, stop_words)

```

### Discuss

Think about the questions below:

1.  Is it always necessary to remove stop words?

2.  How could we remove customized stop words?

:::

# Explore

Making Simple Data Visualizations

## A Word Cloud

::: panel-tabset
## count()

Run the following script:

```{r}
#| echo: true
#| fig.show: hide
opd_counts <- count(opd_clean, word, sort = TRUE)
```


## wordcloud2()

Run the following script:

```{r}
#| echo: true
#| fig.show: hide
library(wordcloud2)
wordcloud2(opd_counts)
```
:::

## Acknowledgements

::: columns
::: {.column width="20%"}
![](img/nsf.jpg){fig-align="center" width="80%"}
:::

::: {.column width="80%"}
This work was supported by the National Science Foundation grants DRL-2025090 and DRL-2321128 (ECR:BCSER). Any opinions, findings, and conclusions expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.
:::
:::

## References
